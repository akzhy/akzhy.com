@use "sass:map";

$css_variables: (
  primary: #9c27b0,
  secondary: #f44336,
  bg__primary: #171414,
  bg__secondary: #1b1b1b,
  bg__accent: #2f283d,
  fg__primary: #fff,
  fg__light: #d2d2d2,
  fg__error: #ff8080,
  fg__success: #8bf189,
  fg__link: #5bb3ff,
  shelf_dots: #efebe9,
  input_border: rgba(255, 255, 255, 0.3),
  font: #{"Poppins",
  sans-serif},
);

$light_theme: (
  primary: #94c759,
  secondary: #3ca8d8,
  bg__primary: #fff,
  bg__secondary: #f7f7f7,
  bg__accent: #d7d7d7,
  fg__primary: #343959,
  fg__light: #444,
  fg__error: #f44335,
  fg__success: #0c8a11,
  fg__link: #1670b7,
  shelf_dots: #efebe9,
  input_border: rgba(0, 0, 0, 0.3),
);

$breakpointSizes: (
  sm: 640px,
  md: 768px,
  lg: 1024px,
  xl: 1280,
  2xl: 1563px,
);

$breakpoints: (
  min-sm: (
    min-width: map-get($breakpointSizes, "sm"),
  ),
  min-md: (
    min-width: map-get($breakpointSizes, "md"),
  ),
  min-lg: (
    min-width: map-get($breakpointSizes, "lg"),
  ),
  min-xl: (
    min-width: map-get($breakpointSizes, "xl"),
  ),
  min-2xl: (
    min-width: map-get($breakpointSizes, "2xl"),
  ),
  max-sm: (
    max-width: map-get($breakpointSizes, "sm"),
  ),
  max-md: (
    max-width: map-get($breakpointSizes, "md"),
  ),
  max-lg: (
    max-width: map-get($breakpointSizes, "lg"),
  ),
  max-xl: (
    max-width: map-get($breakpointSizes, "xl"),
  ),
  max-2xl: (
    min-width: map-get($breakpointSizes, "2xl"),
  ),
);

@mixin cssvars() {
  :root {
    @each $name, $value in $css_variables {
      --#{$name}: #{$value};
    }
  }
  body[data-theme="light"] {
    @each $name, $value in map.merge($css_variables, $light_theme) {
      --#{$name}: #{$value};
    }
  }
}

@function cssvar($name) {
  @return var(--#{$name}, map-get($css_variables, $name));
}

@mixin media($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  } @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}
